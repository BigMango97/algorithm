# 2747번 피보나치 수
# 문제) 피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.
#       이를 식으로 써보면 Fn = Fn-1 + Fn-2 (n ≥ 2)가 된다.
#       n=17일때 까지 피보나치 수를 써보면 다음과 같다.
#       0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597
#       n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.
# 입력) 첫째 줄에 n이 주어진다. n은 45보다 작거나 같은 자연수이다.
# 출력) 첫째 줄에 n번째 피보나치 수를 출력한다.
n = int(input())


def fibo(x):
    if x == 1 or x == 2:
        return 1
    elif x == 0:
        return 0
    else:
        return fibo(x-1)+fibo(x-2)


print(fibo(n))

# 피보나치 수열: 탑다운 다이나믹 프로그래밍 소스코드
# 한번 계산된 결과를 메모이제이션 하기 위한 리스트 초기화
d = [0]*100


def fibo(x):
    if x == 1 or x == 2:
        return 1
    if d[x] != 0:
        return d[x]
    d[x] = fibo(x-1)+fibo(x-2)
    return d[x]


print(fibo(n))
