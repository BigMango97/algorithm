-- 즐겨찾기가 가장 많은 식당 정보 출력하기
-- Level 3 10,771명 완료
SELECT FOOD_TYPE, REST_ID, REST_NAME, FAVORITES
FROM (SELECT FOOD_TYPE, 
             REST_ID, 
             REST_NAME, 
             FAVORITES,
             MAX(FAVORITES) OVER(PARTITION BY FOOD_TYPE) AS MAX_FAVORITES
     FROM REST_INFO)
WHERE FAVORITES = MAX_FAVORITES
ORDER BY FOOD_TYPE DESC
 
-- 저자 별 카테고리 별 매출액 집계하기
-- Level 4 7,123명 완료
SELECT B.AUTHOR_ID, A.AUTHOR_NAME, B.CATEGORY, SUM(BS.SALES*B.PRICE) AS PUBLISHED_DATE
FROM BOOK B, AUTHOR A , BOOK_SALES BS
WHERE B.AUTHOR_ID = A.AUTHOR_ID AND BS.BOOK_ID = B.BOOK_ID AND TO_CHAR(BS.SALES_DATE,'YYYY-MM')='2022-01'
GROUP BY B.AUTHOR_ID, A.AUTHOR_NAME, B.CATEGORY
ORDER BY B.AUTHOR_ID ASC, B.CATEGORY DESC
 
-- 자동차 종류 별 특정 옵션이 포함된 자동차 수 구하기
-- Level 2 10,089명 완료
-- # REGEXP_LIKE(OPTIONS, '통풍시트|열선시트|가죽시트') 암기
SELECT CAR_TYPE, COUNT(*) AS CARS
FROM CAR_RENTAL_COMPANY_CAR
WHERE REGEXP_LIKE(OPTIONS, '통풍시트|열선시트|가죽시트')
GROUP BY CAR_TYPE
ORDER BY CAR_TYPE
 
-- 조건에 맞는 사용자와 총 거래금액 조회하기
-- Level 3 7,517명 완료
SELECT UGU.USER_ID, UGU.NICKNAME, SUM(USB.PRICE) AS TOTAL_SALES
FROM USED_GOODS_BOARD USB, USED_GOODS_USER UGU
WHERE USB.WRITER_ID = UGU.USER_ID AND USB.STATUS = 'DONE'
GROUP BY UGU.USER_ID, UGU.NICKNAME
HAVING SUM(USB.PRICE) >= 700000
ORDER BY TOTAL_SALES ASC
 
-- 성분으로 구분한 아이스크림 총 주문량
-- Level 2 12,960명 완료
SELECT INGREDIENT_TYPE, SUM(TOTAL_ORDER) AS TOTAL_ORDER 
FROM FIRST_HALF FH, ICECREAM_INFO II
WHERE FH.FLAVOR = II.FLAVOR
GROUP BY INGREDIENT_TYPE
ORDER BY TOTAL_ORDER  ASC
 
-- 카테고리 별 도서 판매량 집계하기
-- Level 3 9,134명 완료
SELECT B.CATEGORY, SUM(BS.SALES) AS TOTAL_SALES
FROM BOOK B, BOOK_SALES BS
WHERE B.BOOK_ID = BS.BOOK_ID AND TO_CHAR(SALES_DATE	,'YYYY-MM')='2022-01'
GROUP BY B.CATEGORY
ORDER BY CATEGORY ASC
 
-- 진료과별 총 예약 횟수 출력하기
-- Level 2 12,734명 완료
SELECT MCDP_CD AS '진료과코드', COUNT(*) AS '5월예약건수'
FROM APPOINTMENT
WHERE TO_CHAR(APNT_YMD,'YYYY-MM') = '2022-05'
GROUP BY MCDP_CD
 
-- 자동차 대여 기록에서 대여중 / 대여 가능 여부 구분하기
-- Level 3 6,628명 완료
 
-- 대여 횟수가 많은 자동차들의 월별 대여 횟수 구하기
-- Level 3 6,113명 완료
 
-- 식품분류별 가장 비싼 식품의 정보 조회하기
-- Level 4 8,161명 완료
SELECT A.CATEGORY, A.PRICE AS MAX_PRICE, A.PRODUCT_NAME
FROM (SELECT CATEGORY, 
             PRODUCT_NAME,
             PRICE,
             MAX(PRICE) OVER(PARTITION BY CATEGORY) AS MAX
      FROM FOOD_PRODUCT
      WHERE CATEGORY IN ('과자', '국', '김치', '식용유')
    ) A
WHERE A.PRICE = MAX
ORDER BY MAX_PRICE DESC
 
-- 고양이와 개는 몇 마리 있을까
-- Level 2 57,956명 완료
SELECT ANIMAL_TYPE, COUNT(*) AS count
FROM ANIMAL_INS
GROUP BY ANIMAL_TYPE
ORDER BY ANIMAL_TYPE ASC
 
-- 동명 동물 수 찾기
-- Level 2 54,502명 완료
SELECT NAME, COUNT(*) AS COUNT
FROM ANIMAL_INS
GROUP BY NAME
HAVING COUNT(*) >=2 AND NAME IS NOT NULL
ORDER BY NAME
 
-- 년, 월, 성별 별 상품 구매 회원 수 구하기
-- Level 4 7,601명 완료
SELECT TO_CHAR(OS.SALES_DATE,'YYYY') AS YEAR, TO_NUMBER(TO_CHAR(OS.SALES_DATE,'MM')) AS MONTH , UI.GENDER, COUNT(DISTINCT OS.USER_ID) USERS
FROM USER_INFO UI INNER JOIN ONLINE_SALE OS ON UI.USER_ID = OS.USER_ID 
WHERE UI.GENDER IS NOT NULL
GROUP BY TO_CHAR(OS.SALES_DATE,'YYYY'), TO_NUMBER(TO_CHAR(OS.SALES_DATE,'MM')), GENDER
ORDER BY YEAR, MONTH, GENDER
 
-- 입양 시각 구하기(1)
-- Level 2 46,576명 완료
-- # TO_CHAR(DATETIME,'hh24' 확인
SELECT TO_NUMBER(HOUR) AS HOUR, count(*) AS COUNT
FROM (SELECT TO_CHAR(DATETIME,'hh24') HOUR FROM ANIMAL_OUTS)
GROUP BY HOUR
HAVING HOUR BETWEEN 09 AND 19
ORDER BY HOUR

-- 입양 시각 구하기(2)
-- Level 4 28,569명 완료

 
-- 가격대 별 상품 개수 구하기
-- Level 2 11,136명 완료
SELECT TRUNC(PRICE, -4) PRICE_GROUP, COUNT(*) AS PRODUCTS
FROM PRODUCT
GROUP BY TRUNC(PRICE, -4)
ORDER BY PRICE_GROUP ASC
 